{"version":3,"sources":["Toppliste.tsx","Hjem.tsx","App.js","reportWebVitals.js","index.js"],"names":["data","navn","score","Toppliste","className","to","slice","sort","x","y","map","it","index","dag","beskrivelse","hint","svar","Div","styled","div","Grid","Item","Hjem","d","Date","klokkeslett","getHours","dato","getDate","useState","oppgaveValgt","setOppgaveValgt","element","onClick","style","backgroundColor","color","opacity","cursor","find","href","App","height","fontSize","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff2f32e2.chunk.js","sourcesContent":["import React from 'react'; // we need this to make JSX compile\nimport { Link } from 'react-router-dom';\n\ntype TopplisteEntry = {\n    navn: string;\n    score: number;\n}\nconst data: TopplisteEntry[] = [\n    { navn: \"Henning\", score: 213},\n    { navn: \"Jørgen Boganes\", score: 3},\n    { navn: \"Hildur Nautnes\", score: 213},\n    { navn: \"Helge Boganes\", score: 213},\n  ]\n\nexport const Toppliste = () => {\n\n    return (\n        <div className=\"App\">\n            <div>\n                <Link to=\"/julereisen\">Gå tilbake til oppgavene</Link>\n                <h1>Toppliste</h1>\n                <h5>Oppdatert: 01/12/2021</h5>\n                {\n                    data.slice(0, 10).sort(function (x, y) { return y.score - x.score; }).map((it, index) => (<p>{index + 1}: {it.navn}, {it.score}</p>))\n                }\n            </div>\n        </div>\n    )\n}","import { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport styled from \"styled-components\"\n\ntype OppgaveEntry = {\n    dag: number;\n    beskrivelse: string;\n    hint: string;\n    svar: string;\n}\nconst data: OppgaveEntry[] = [\n    { dag: 1, beskrivelse: \"Kommer snart\", hint: \"-\", svar: \"-\"},\n    { dag: 2, beskrivelse: \"Kommer snart\", hint: \"-\", svar: \"-\"},\n    { dag: 3, beskrivelse: \"Kommer snart\", hint: \"-\", svar: \"-\"},\n    { dag: 4, beskrivelse: \"Kommer snart\", hint: \"-\", svar: \"-\"},\n    { dag: 5, beskrivelse: \"Kommer snart\", hint: \"-\", svar: \"-\"},\n    { dag: 6, beskrivelse: \"Kommer snart\", hint: \"-\", svar: \"-\"},\n    { dag: 7, beskrivelse: \"Kommer snart\", hint: \"-\", svar: \"-\"},\n    { dag: 8, beskrivelse: \"Kommer snart\", hint: \"-\", svar: \"-\"},\n    { dag: 9, beskrivelse: \"Kommer snart\", hint: \"-\", svar: \"-\"},\n    { dag: 10, beskrivelse: \"Kommer snart\", hint: \"-\", svar: \"-\"},\n    { dag: 11, beskrivelse: \"Kommer snart\", hint: \"-\", svar: \"-\"},\n    { dag: 12, beskrivelse: \"Kommer snart\", hint: \"-\", svar: \"-\"},\n    { dag: 13, beskrivelse: \"Kommer snart\", hint: \"-\", svar: \"-\"},\n    { dag: 14, beskrivelse: \"Kommer snart\", hint: \"-\", svar: \"-\"},\n    { dag: 15, beskrivelse: \"Kommer snart\", hint: \"-\", svar: \"-\"},\n    { dag: 16, beskrivelse: \"Kommer snart\", hint: \"-\", svar: \"-\"},\n    { dag: 17, beskrivelse: \"Kommer snart\", hint: \"-\", svar: \"-\"},\n    { dag: 18, beskrivelse: \"Kommer snart\", hint: \"-\", svar: \"-\"},\n    { dag: 19, beskrivelse: \"Kommer snart\", hint: \"-\", svar: \"-\"},\n    { dag: 20, beskrivelse: \"Kommer snart\", hint: \"-\", svar: \"-\"},\n    { dag: 21, beskrivelse: \"Kommer snart\", hint: \"-\", svar: \"-\"},\n    { dag: 22, beskrivelse: \"Kommer snart\", hint: \"-\", svar: \"-\"},\n    { dag: 23, beskrivelse: \"Kommer snart\", hint: \"-\", svar: \"-\"},\n    { dag: 24, beskrivelse: \"Kommer snart\", hint: \"-\", svar: \"-\"},\n]\n\nconst Div = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 300px;\n`\nconst Grid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n\n  margin: auto;\n  margin-bottom: 15px;\n`\nconst Item = styled.div`\n    flex: 1 0 21%; /* explanation below */\n    margin: 5px;\n    height: 75px;\n    background-color: grey;\n    text-align: center;\n    color: white;\n    font-size: 36px;\n    \n  line-height: 75px;\n`\nexport const Hjem = () => {\n    const d = new Date();\n    const klokkeslett = d.getHours()\n    const dato = (d.getDate() > 24) ? 0 : d.getDate();\n    const [oppgaveValgt, setOppgaveValgt] = useState<number>(0)\n\n    return (\n        <Div>\n            {oppgaveValgt === 0 && (\n                <div>\n            <h3>Velg en luke</h3>\n            <Grid>\n                {data.map((element) => (\n                    <Item\n                        onClick={() => { if ((element.dag <= dato)) { setOppgaveValgt(element.dag) } }}\n                        style={{\n                            backgroundColor: (element.dag === dato) ? \"#fedfb0\" : ((element.dag < dato) ? \"#344d2f\" : \"#a81817\"),\n                            color: ((element.dag < dato) ? \"#e9e5e1\" : \"black\"),\n                            opacity: ((element.dag > dato) ? 0.1 : 1),\n                            cursor:  ((element.dag <= dato) ? \"pointer\" : \"default\")\n                        }}\n                    >\n                        {element.dag}\n                    </Item>\n                ))}\n            </Grid>\n            <Link to=\"/toppliste\">Klikk her for å se topplisten</Link></div>\n            )}\n            {oppgaveValgt !== 0 && (\n                <div>\n                    <Link onClick={() => setOppgaveValgt(0)} to={\"\"}>Gå tilbake til oppgavene</Link>\n                    <h3>Oppgave for {oppgaveValgt}. Desember:</h3>\n                    <p>{data.find((element) => element.dag === oppgaveValgt)?.beskrivelse}</p>\n                    {oppgaveValgt < dato && (\n                        <div>\n                            <h3>Svar:</h3>\n                            <p>{data.find((element) => element.dag === oppgaveValgt)?.svar}</p>\n                        </div>\n                    )}\n                    {oppgaveValgt === dato && (\n                        <div>\n                            <h3>Hint:</h3>\n                            {klokkeslett >= 18 && (\n                                <p>{data.find((element) => element.dag === oppgaveValgt)?.hint}</p>\n                            )}\n                            {klokkeslett < 18 && (\n                                <p>Kommer klokken 18:00</p>\n                            )}\n                            <h3>Har du funnet ut løsningen?</h3>\n                            <a href=\"https://forms.gle/z25GJuVRQbXFwzAu8\">Send inn svaret ditt her</a>\n                        </div>\n                    )}\n                </div>\n            )}\n        </Div>\n    )\n}","import './App.css';\nimport { Toppliste } from './Toppliste';\nimport { Hjem } from './Hjem';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{height: \"100%\"}}>\n      <h1 style={{ fontSize: 48 }}>Den magiske Julereisen</h1>\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<Hjem/>} />\n          <Route path=\"/julereisen\" element={<Hjem/>} />\n          <Route path=\"/toppliste\" element={<Toppliste/>} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}